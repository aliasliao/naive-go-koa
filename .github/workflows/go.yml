name: Go

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

env:
  GOPATH: ${{ github.workspace }}
  GOBIN: ${{ github.workspace }}/bin
  APP: src/github.com/${{ github.repository }}
  PROTOC: 3.11.4

jobs:

  build:
    name: Build
    runs-on: ubuntu-18.04
    steps:

    - name: Set up Go 1.x
      uses: actions/setup-go@v2
      with:
        go-version: ^1.14

    - name: Install protoc
      run: |
        wget https://github.com/protocolbuffers/protobuf/releases/download/v${{ env.PROTOC }}/protoc-${{ env.PROTOC }}-linux-x86_64.zip
        unzip *.zip -d ./tmp
        cp -r ./tmp/include/* ${{ env.GOPATH }}/src
        cp ./tmp/bin/* ${{ env.GOBIN }}
        rm -f *.zip
        rm -rf ./tmp
        go get -v google.golang.org/protobuf/cmd/protoc-gen-go
        echo -----------go env
        go env
        echo -----------path
        echo $PATH
        echo -----------ls gobin
        ls -al ${{ env.GOBIN }}
        echo -----------ls gopath
        ls -al ${{ env.GOPATH }}


    - name: Check out code into the Go module directory
      uses: actions/checkout@v2
      with:
        path: ${{ env.APP }}

    - name: Get dependencies
      working-directory: ${{ github.workspace }}/${{ env.APP }}
      run: go get -v -d ./...

    - name: Generate proto
      working-directory: ${{ github.workspace }}/${{ env.APP }}
      run: |
        protoc --proto_path=.  --go_out=. ./model/*.proto
        ls -al

    - name: Build
      working-directory: ${{ github.workspace }}/${{ env.APP }}
      run: go build -v .

    - name: Test
      working-directory: ${{ github.workspace }}/${{ env.APP }}
      run: go test -v ./...
